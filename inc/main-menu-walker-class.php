<?php
/**
 * For use with wp_list_pages() in main-menu.php.
 * Updates menu item classes to match those generated by a standard WordPress menu.
 */
class antipasto_main_menu extends Walker_Page {
    public function start_el( &$output, $page, $depth = 0, $args = array(), $current_page = 0 ) {
        if ( $depth ) {
            $indent = str_repeat( "\t", $depth );
        } else {
            $indent = '';
        }

        $css_class = array( 'menu-item', 'menu-item-' . $page->ID );

        if ( isset( $args['pages_with_children'][ $page->ID ] ) ) {
            $css_class[] = 'menu-item-has-children';
        }

        if ( ! empty( $current_page ) ) {
            $_current_page = get_post( $current_page );
            if ( $_current_page && in_array( $page->ID, $_current_page->ancestors ) ) {
                $css_class[] = 'current-menu-ancestor';
            }
            if ( $page->ID == $current_page ) {
                $css_class[] = 'current-menu-item';
            } elseif ( $_current_page && $page->ID == $_current_page->post_parent ) {
                $css_class[] = 'current-menu-parent';
            }
        } elseif ( $page->ID == get_option('page_for_posts') ) {
            $css_class[] = 'current-menu-parent';
        }

        $css_classes = implode( ' ', apply_filters( 'page_css_class', $css_class, $page, $depth, $args, $current_page ) );

        if ( '' === $page->post_title ) {
            $page->post_title = sprintf( __( '#%d (no title)' ), $page->ID );
        }

		$submenubutton = '';

		if ( strpos( $css_classes, 'menu-item-has-children' ) ) {
			$submenubutton = '<button type="button" class="sub-menu-toggle mobile-only">' . $page->post_title . '</button>';
		}

        $args['link_before'] = empty( $args['link_before'] ) ? '' : $args['link_before'];
        $args['link_after'] = empty( $args['link_after'] ) ? '' : $args['link_after'];

        $output .= $indent . sprintf(
            '<li class="%s"><a href="%s" class="menu-item-link">%s%s%s</a>%s',
            $css_classes,
            get_permalink( $page->ID ),
            $args['link_before'],
            apply_filters( 'the_title', $page->post_title, $page->ID ),
            $args['link_after'],
			$submenubutton
        );
    }

    public function start_lvl( &$output, $depth = 0, $args = array() ) {
        if ( 'preserve' === $args['item_spacing'] ) {
            $t = "\t";
            $n = "\n";
        } else {
            $t = '';
            $n = '';
        }
        $indent = str_repeat( $t, $depth );
        $output .= "{$n}{$indent}<ul class='sub-menu'>{$n}";
    }
}